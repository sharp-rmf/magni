#mode 1: virtual line following mode
#mode 2: agile mode. Free moving within map.
  
#publishTaskStatus(-1) : exception. Due to can not reach goal
#publishTaskStatus(-2) : fatal. input data not valid
#publishTaskStatus(-3) : repeated exception. Triggered by the number of exception exceed "m_exception_count_threshold" param
#publishTaskStatus(-4) : local contingency code activated. Given by perception or external incoming bed.
#publishTaskStatus(-5) : pursuit target callback
#publishTaskStatus(-9) : Panic mode, activate exploration. Due to not moving for more than some time && scan matching is low
#publishTaskStatus(-15): Went outside geofence if geofence is enabled

#m_start_id_command >= 0: enter at to specified id
#m_start_id_command == -1: go to best entry id using mrpt, if fail, go to next best point according to id priority
#m_start_id_command == -2: go to best entry id using mrpt, if fail, recalculate mrpt while blacklistisng previous tries. If success, delete blacklist list.
         
#m_exit_id >= 0 :go to specified id
#m_exit_id == -1 :go to last id
#m_exit_id == -2 :go to best exit point using mrpt
#m_exit_id == -3 :go to whichever node reached first 

#  Safety_mode
#    0: off
#    1: all on (normal, aux, low, high)
#    2: docking
#    3: normal only
#    4: normal & aux only
#    5: normal & aux, & high only
#If safety mode is made to be 0 or 2 and parental_control is 1, safety will automatically be made into 1.
#In order to deactivate safety for experiment purpose, please make safety mode to be -1 in the mission data or set m_safety_parental_control = 0.

#===== Safety parental control. Keep it 1 for extra safety, make it 0 for experiment of mode 1 without safety ===
m_safety_parental_control: 1
#===== watchdog activation param 
m_watchdog_guard: 1
#===== virtual line width determines the amount of deviation allowed from the path to bypass the nearest point and go to next point
m_virtual_line_width: 0.6
m_inline_route_bent_threshold: 1.2
#===== gain constants used in mode 1 forward velocity
#===== velocity profile 1 is a fixed inverse exponential model, profile 2 is adjustable linear model 
m_velocity_profile_model: 2
#===== in profile 2, the cut off bearing is the bearing value when forward speed goes zero
m_cut_off_bearing: 0.4
#===== sharp turn params
k_sharp_turn_threshold: 0.3
m_slowing_for_turn_range: 1
m_sharp_turn_angle_cut_off: 1
#== minimum speed factor when slowing down
m_sharp_turn_vel_min: 0.15

#=== sslowing down when there is obstacle in front
m_follower_slowing_range: 2
m_follower_slowing_const: 0.2
m_obstacle_slowing_vel_min: 0.2

#===== gain constants used in mode 1 turning velocity
m_turn_angle: 1
m_turn_gain: 0.1
k_soft_turn_threshold: 0.02

#===== Threshold to transition from fixed route to agile mode 
m_switching_trigger_range_threshold: 2.5
m_switching_trigger_bearing_threshold: 0.2
k_distance_to_next_point_threshold: 99

#===== timer cap for patience. Unit is in terms of loop sampling time
m_patience_timer_max: 100
#===== timeout for clear cost map. Unit is in terms of loop sampling time
m_clear_costmap_threshold: 100
#===== the frequency of horn when robot is blocked. Unit is in terms of loop sampling time
m_Horn_waiting_count_threshold: 180

#== 0:use linear shortest distance to choose first and last ID, 1:use mrpt 
m_pathing_method: 1

m_mrpt_timer_threshold: 5

#== max number of exceptions allowed before declared fatal ====
m_exception_count_threshold_default: 3
m_exception_count_threshold_near: 15
m_near_target_distance: 0.5

#== flag to enable or disable stuck watchdog ====
m_stuck_timer_allowed: 0
#== max duration of safety triggered constantly in mode 2 (second) ====
m_stuck_timer_threshold: 30
#== percentage of scan matching (value between 0 to 1)=====
m_scan_matching_threshold: 0.4
#== max number of scan matching goes below m_scan_matching_threshold ====
m_low_matching_count_threshold: 10

#== ackermann steering parameters ===========
m_ackermann_wheel_vel_min: 0.1
m_ackermann_base_width: 0.4  
m_ackermann_min_forward_vel: 0.2
m_ackermann_max_backward_vel: -0.2
m_allow_steering_mode_switching: true

m_tf_time_diff_threshold: 0.5

#== auto change direction settings for mode 1. When m_auto_direction_change_allowed: 1, robot will change direction whenever goal is nearby
m_bearing_limit_for_direction_change: 1.57 
m_range_limit_for_direction_change: 3
m_auto_direction_change_allowed: 0