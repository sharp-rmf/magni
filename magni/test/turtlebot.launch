<launch>

  <arg name="model" value="burger" />
  <arg name="x_pos" default="-2.0" />
  <arg name="y_pos" default="-0.5" />
  <arg name="z_pos" default="0.0" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_world.world" />
    <arg name="paused" value="false" />
    <arg name="use_sim_time" value="true" />
    <arg name="gui" value="true" />
    <arg name="headless" value="true" />
    <arg name="debug" value="false" />
  </include>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

  <!-- Arguments -->
  <arg name="map_file" value="$(find magni)/test/map_wo_pillars.yaml" />
  <arg name="open_rviz" value="true" />
  <arg name="move_forward_only" value="false" />
  <!-- Turtlebot3 -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>
  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)" />
  <!-- AMCL -->
  <include file="$(find turtlebot3_navigation)/launch/amcl.launch">
    <!-- <arg name="model" value="$(arg model)" /> -->
  </include>
  <!-- move_base -->
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="odom" />
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <!-- <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_burger.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_burger.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params_burger.yaml" command="load" /> -->

    <!-- Testing out romio global and local planner configs in turtlebot -->
    <rosparam command="load" file="$(find magni)/param/turtle/costmap_common_params.yaml" ns="local_costmap" />
    <rosparam command="load" file="$(find magni)/param/turtle/costmap_common_params.yaml" ns="global_costmap" />
    <rosparam command="load" file="$(find magni)/param/turtle/local_costmap_params.yaml" />
    <rosparam command="load" file="$(find magni)/param/turtle/global_costmap_params.yaml" />
    <rosparam command="load" file="$(find magni)/param/turtle/move_base_params.yaml" />
    <rosparam command="load" file="$(find magni)/param/turtle/dwa_tuned.yaml" />
    <!-- Testing out romio global and local planner configs in turtlebot -->

    <remap from="cmd_vel" to="$(arg cmd_vel_topic)" />
    <remap from="odom" to="$(arg odom_topic)" />
    <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
  </node>
  <!-- <include file="$(find costmap_2d)/launch/example.launch" /> -->

  <!-- rviz -->
  <group if="$(arg open_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find magni)/test/turtle.rviz" />
  </group>
</launch>